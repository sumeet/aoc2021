pat digit {
  '0' => 0,
  '1' => 1,
  '2' => 2,
  '3' => 3,
  '4' => 4,
  '5' => 5,
  '6' => 6,
  '7' => 7,
  '8' => 8,
  '9' => 9
}
pat sum { ns@[ANY] => {
  acc = 0
  for ns { acc = acc + *ns }
  acc
}}
pat num digits@[digit]{1+} => {
  sum [(*digits * (10 ** (#digits - (%digits + 1)))) <- digits]
}
pat csnums [nums<@num ~ ','] ~ nums<@num ~ '\n' => nums 

sample = "3,4,3,1,2"
fishes = csnums(read_to_string("./input"))

for i@(0..80) {
  dbg(%i)
  next_fishes = []
  for fishes {
    if (*fishes == 0) {
      *fishes = 6
      push(next_fishes, 8)
    } else {
      *fishes -= 1
    }
  }
  for next_fishes { push(fishes, *next_fishes) }
}

dbg(#fishes)
